# Script to create a shear deformation given a data file
# The shear deformation is done via change box

units lj
dimension 3
boundary p p p

# Styles of atoms and that stuff
atom_style bond
bond_style zero nocoeff
pair_style hybrid/overlay/omp zero 0.0 lj/cut/omp 1.12 table/omp linear 5000000 threebody/table
newton on

# Varaibles
variable seed3 equal 3124
variable tstep equal 0.001
variable sstep equal 10000

read_data data.hydrogel extra/bond/per/atom 4 extra/special/per/atom 5

change_box all triclinic

# Coefficients
include potential.in

# Molecules
include molDeform.in

fix BrDy all rigid/nve/small molecule langevin 0.05 0.05 0.25 12345 # Brownian Dynamics: langevin + nve
fix_modify BrDy virial no

# Variables for the shear deformation
variable shearDirection equal xy
variable maxTilt equal 0.5*lx
variable shear_rate equal 0.001    # 0.1 units box
variable max_strain equal 2
variable Nstep_per_strain equal (1/v_shear_rate)*(1/v_tstep)+1000
variable shear_it equal v_max_strain*v_Nstep_per_strain 
variable Nsave equal 500


thermo ${sstep}

# Compute global kinetic and potential energy and temperature
compute t all temp
compute ep all pe
compute ek all ke
compute stress all pressure t
compute stressKe all pressure t ke
compute stressPair all pressure NULL pair
compute stressFix all pressure NULL fix
compute stressVirial all pressure NULL virial
variable tilt equal v_shear_rate*step*dt 

# Compute Cluster sizes
#compute cluster all aggregate/atom 0.6
#compute cc1 all chunk/atom c_cluster compress yes pbc yes
#compute size all property/chunk cc1 count

# DUMPS and FIXES

# Save atom positions
dump dumpID all atom ${Nsave} info/patchyParticles_shear.dumpf
dump_modify dumpID pbc yes # remap atoms via periodic boundary conditions
#dump_modify dumpID delay ${steps}

# Save global energies and temperature
group Energy empty
fix fixEng Energy ave/time 1 1 10 c_t c_ep c_ek file info/energy_shear.fixf

# Save Stress tensor
group Stress empty
fix fixStress1 Stress ave/time 1 1000 1000 v_tilt c_stress[*] file info/stress_shear.fixf
fix fixStress2 Stress ave/time 1 1000 1000 v_tilt c_stressKe[*] file info/stressKe_shear.fixf
fix fixStress3 Stress ave/time 1 1000 1000 v_tilt c_stressPair[*] file info/stressPair_shear.fixf
fix fixStress4 Stress ave/time 1 1000 1000 v_tilt c_stressFix[*] file info/stressFix_shear.fixf
fix fixStress5 Stress ave/time 1 1000 1000 v_tilt c_stressVirial[*] file info/stressVirial_shear.fixf

# Save the cluster sizes
#fix ID group-ID style Nevery Nrepeat Nfreq lo hi Nbin value1 value2
#fix 1 all ave/time 1 1 ${shear_it} c_size file info/sizeCluster_shear.fixf mode vector

# RUN SIMULATION
timestep ${tstep}

run ${shear_it} post no every 1 &
  "change_box all xy delta ${shear_rate} remap units box" &
  "if '${shearDirection} == ${maxTilt}' then 'change_box all xy final -${maxTilt} units box'"

#variable loop_it loop ${shear_it}
#label runloop
#change_box all xy delta ${shear_rate} remap units box
#if "${shearDirection} == ${maxTilt}" then "change_box all xy final -${maxTilt} units box"
#run 1
#next loop_it
#jump SELF runloop


