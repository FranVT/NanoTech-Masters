# Input script to debug/understand the implmentation of the threebody in lammps.

# Initialization
units lj
dimension 3
boundary f f f

# Styles of atoms and that stuff
atom_style full 
bond_style harmonic
angle_style harmonic
pair_style hybrid/overlay zero 0.0 lj/cut/omp 1.12 table/omp linear 5000000 threebody/table

# Create simulaiton box
region simulation_box block -$L $L -$L $L -$L $L
# N-atom-types region-ID keyword value Is necesesary the extra/special/per/atom (# of special neighbors per atom)
create_box 4 simulation_box &
    bond/types 1 &
    angle/types 2 &
    extra/bond/per/atom 10 &
    extra/angle/per/atom 6 &
    extra/special/per/atom 10

# Atom types
mass 1 1.0      # CL 
mass 2 1.0      # MO
mass 3 1.0      # PA
mass 4 1.0      # PB

# Coefficients
include potential.in

# Molecules
include molecules.in


# Compute global kinetic and potential energy and temperature
compute t all temp
compute p all pressure t
compute ep all pe
compute ek all ke
variable eT equal etotal
variable eB equal ebond
variable eA equal eangle
variable H equal enthalpy
variable eM equal emol
variable ec equal ecouple
variable eC equal econserve
compute stressVirial all pressure t ke pair
compute wcaPair all pair lj/cut/omp epair
compute patchPair all pair table/omp epair
compute swapPair all pair threebody/table epair

# cluster analysis
compute clPatch Patches cluster/atom 0.6
compute ccl Patches chunk/atom c_clPatch compress yes discard no # Define chunks based on cluster ID
compute size Patches property/chunk ccl count # Counts the atoms in each chunk


# DUMPS and FIXES

# Bounce walls
fix wall all wall/reflect xlo EDGE xhi EDGE ylo EDGE yhi EDGE zlo EDGE zhi EDGE units box


# Save atom positions
dump dumpID all atom ${Ndump} ${dumpDir}/assembly/patchyParticles_assembly.*.dumpf
dump_modify dumpID pbc yes # remap atoms via periodic boundary conditions

group Energy empty
group PairE1 empty
group PairE2 empty
group PairE3 empty

# Save global energies and temperature
group Energy empty
fix fixEng Energy ave/time 1 ${Nsave} ${Nsave} c_t c_ep c_ek c_p v_ec v_eC v_eT v_eB v_eA v_H v_eM file ${Dir}/energy_assembly.fixf

fix fixwca PairE1 ave/time 1 ${Nsave} ${Nsave} c_wcaPair file ${Dir}/wcaPair_assembly.fixf
fix fixpatch PairE2 ave/time 1 ${Nsave} ${Nsave} c_patchPair file ${Dir}/patchPair_assembly.fixf
fix fixswap PairE3 ave/time 1 ${Nsave} ${Nsave} c_swapPair file ${Dir}/swapPair_assembly.fixf

# Save Stress tensor
group Stress empty
fix fixStress5 Stress ave/time 1 ${NsaveStress} ${NsaveStress} c_stressVirial[*] file ${Dir}/stressVirial_assembly.fixf

# Save the cluster information
fix fixCluster2 Patches ave/histo 1 ${Nsave} ${Nsave} 0 8 80 c_size mode vector file ${Dir}/clusterPatches_assembly.fixf

thermo ${NsaveStress}

# RUN SIMULATION

# Brownian Dynamics using Langevin Thermostat

# Set the time integrator
fix VelVerlet all nve # Use Velocity Verlet integrator
timestep ${tstep}

# First elevate the temperature
fix ThermoLng all langevin 0.0 ${temp} ${damp} ${seed3} # Brownian Dynamics: langevin + nve 
run ${stepsheat}

unfix ThermoLng

# Now we let the system to create the polymeric network
fix ThermoLng all langevin ${temp} ${temp} ${damp} ${seed3} # Brownian Dynamics: langevin + nve 
run ${steps}

# Write data for deformation

write_data data.hydrogel
